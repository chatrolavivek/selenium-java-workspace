<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="1" ignored="0" total="9" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="63" started-at="2020-09-27T22:20:03Z" finished-at="2020-09-27T22:20:03Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="63" started-at="2020-09-27T22:20:03Z" finished-at="2020-09-27T22:20:03Z">
      <class name="selenium.Testing2">
        <test-method status="PASS" signature="Test4()[pri:0, instance:selenium.Testing2@3a82f6ef]" name="Test4" duration-ms="1" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test4 -->
        <test-method status="PASS" signature="Test5()[pri:0, instance:selenium.Testing2@3a82f6ef]" name="Test5" duration-ms="1" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test5 -->
      </class> <!-- selenium.Testing2 -->
      <class name="selenium.Testing3">
        <test-method status="FAIL" signature="homeTest()[pri:1, instance:selenium.Testing3@100fc185]" name="homeTest" duration-ms="4" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Verifying home element expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Verifying home element expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at selenium.Testing3.homeTest(Testing3.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homeTest -->
        <test-method status="SKIP" signature="mainTest()[pri:2, instance:selenium.Testing3@100fc185]" name="mainTest" duration-ms="0" started-at="2020-09-27T18:20:03Z" depends-on-methods="selenium.Testing3.homeTest" finished-at="2020-09-27T18:20:03Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Testing3.mainTest()[pri:2, instance:selenium.Testing3@100fc185] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Testing3.mainTest()[pri:2, instance:selenium.Testing3@100fc185] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1084)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainTest -->
        <test-method status="SKIP" signature="endTest()[pri:3, instance:selenium.Testing3@100fc185]" name="endTest" duration-ms="0" started-at="2020-09-27T18:20:03Z" depends-on-methods="selenium.Testing3.mainTest" finished-at="2020-09-27T18:20:03Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Testing3.endTest()[pri:3, instance:selenium.Testing3@100fc185] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Testing3.endTest()[pri:3, instance:selenium.Testing3@100fc185] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1084)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- selenium.Testing3 -->
      <class name="selenium.Testing1">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:selenium.Testing1@6cc4c815]" name="beforeSuite" is-config="true" duration-ms="8" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:selenium.Testing1@6cc4c815]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:selenium.Testing1@6cc4c815]" name="beforeClass" is-config="true" duration-ms="1" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:selenium.Testing1@6cc4c815]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Test1(java.lang.Integer, java.lang.String)[pri:0, instance:selenium.Testing1@6cc4c815]" name="Test1" duration-ms="4" started-at="2020-09-27T18:20:03Z" data-provider="dp" finished-at="2020-09-27T18:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:selenium.Testing1@6cc4c815]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:selenium.Testing1@6cc4c815]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Test1(java.lang.Integer, java.lang.String)[pri:0, instance:selenium.Testing1@6cc4c815]" name="Test1" duration-ms="2" started-at="2020-09-27T18:20:03Z" data-provider="dp" finished-at="2020-09-27T18:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:selenium.Testing1@6cc4c815]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="Test2()[pri:0, instance:selenium.Testing1@6cc4c815]" name="Test2" duration-ms="1" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:selenium.Testing1@6cc4c815]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:selenium.Testing1@6cc4c815]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:selenium.Testing1@6cc4c815]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Test3()[pri:0, instance:selenium.Testing1@6cc4c815]" name="Test3" duration-ms="1" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:selenium.Testing1@6cc4c815]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:selenium.Testing1@6cc4c815]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:selenium.Testing1@6cc4c815]" name="afterTest" is-config="true" duration-ms="1" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:selenium.Testing1@6cc4c815]" name="afterSuite" is-config="true" duration-ms="0" started-at="2020-09-27T18:20:03Z" finished-at="2020-09-27T18:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- selenium.Testing1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
